"""Шаги алгоритма:

1. Находим номер минимального значения в текущем списке.
2. Производим обмен этого значения со значением первой неотсортированной позиции (обмен не нужен, если минимальный
   элемент уже находится на данной позиции).
3. Сортируем хвост списка, исключив из рассмотрения уже отсортированные элементы."""
from typing import List


def selection_sort(nums: List[int]) -> List[int]:
    for i in range(0, len(nums) - 1):  # Сортируем хвост списка, начиная с первого элемента
        cur_min_idx = i  # Индекс текущего элемента считаем минимальным
        for j in range(i + 1, len(nums)):  # Индекс следующего значения для сравнения с предыдущим
            if nums[j] < nums[cur_min_idx]:  # Сравниваем значения
                cur_min_idx = j  # Ели выполняется условие, присваиваем новое значение текущему

        nums[i], nums[cur_min_idx] = nums[cur_min_idx], nums[i]  # Производим обмен, минимальный элемента уходит в
        # хвост списка
    return nums


print(selection_sort([-3, 5, 0, 1, 10]))
print(selection_sort([-1, 4, 0, -1, 8]))
print(selection_sort([5]))
